http://www.insekteninlebensmitteln.org/docs/index.html
http://www.insekteninlebensmitteln.org/index.test.html
https://knollfrank.github.io/InsektenInLebensmitteln/

http://www.insekteninlebensmitteln.org/docs/InsectsInFoodChecker/index.html
http://www.insekteninlebensmitteln.org/InsectsInFoodChecker/index.test.html
https://knollfrank.github.io/InsektenInLebensmitteln/InsectsInFoodChecker/

http://www.insekteninlebensmitteln-javascript.org/documentation/index.html

Format Document (Ctrl+Shift+I) - Format the entire active file.

https://www.npmjs.com/package/svg-path-parser
npm install --global browserify

- Apache2 Konfiguration:
sudo a2enmod headers
apache2ctl -M | grep headers

/etc/apache2/apache2.conf:
<Directory /home/frankknoll/Dokumente/Insekten/projects/Keine-Insekten-im-Essen/web/InsektenInLebensmitteln/>
        Options Indexes FollowSymLinks
        AllowOverride None
        Require all granted
</Directory>

/etc/apache2/sites-available/Keine-Insekten-im-Essen.conf
sudo a2ensite Keine-Insekten-im-Essen.conf

/etc/hosts:
127.0.0.1	www.InsektenInLebensmitteln.org

systemctl restart apache2
service apache2 status


https://play.google.com/intl/en_us/badges/

FK-TODO:
- "E 120" und "E120" zu E120 in der Android-App normalisieren. Dito "E 904" und "E904" zu "E904" normalisieren.
- die Ersetzung einiger script-Tags in index.html durch das einzelne script-Tag "<script src="./InsektenInLebensmitteln.min.js"></script>"
  um indexMin.html zu erhalten, soll automatisch im Shell-Skript config/publish.sh oder auch über eine Jupyter-Notebook erfolgen.
  Siehe dazu Programmcode von HowBadIsMyBatch.
  Dadurch müssen Änderungen in index.html nicht immer händisch nach indexMin.html übertragen werden.
- Navigation zwischen Kategorien umsetzen wie hier: http://www.satraj.at/online-bestellen oder analog zur Android-App.
  Verwende dazu auch https://developer.mozilla.org/en-US/docs/Web/API/History
- den Chatverlauf aus der Telegramgruppe https://t.me/ilblistgruppe exportieren und die darin befindlichen Produkte
  oder die in https://ilblist.com/wp-content/uploads/Insekten-Lebensmittel.pdf aufgelisteten Produkte
  in OpenFoodFacts aufnehmen bzw. mit OpenFoodFacts abgleichen.
  Dadurch werden sie in der Android-App und in der Web-App sichtbar werden.
- Immer wenn Zutaten mit Insekten angezeigt werden (z.B. Karmin) dann einen Link zu einer
  genaueren Beschreibung dieser Zutat anbieten (z.B. https://de.wikipedia.org/wiki/Karmin).
- Telegram Bot https://core.telegram.org/bots/ zum Exportieren der Telegramkontakte
  der Seiten "Produktmeldestelle" (https://t.me/ilblistgruppe/1) und "Chat zum Thema" (https://t.me/ilblistgruppe/8365)
  programmieren. Dann all diese Kontakte in Telegram anschreiben und auf meine Webseite verweisen.
- Browserplugin programmieren, das bei einem Onlineeinkauf vor Insektenzutaten warnt.
- Neue E-Mail-Adresse einrichten und im InfoDialog für Feedback der Benutzer angeben.
- Google Analytics verfeinern: Suche und Suchbegriff, Länderauswahl, ... mitprotokollieren.
- Zeige standardmäßig Produkte für das Land in den Browsereinstellungen an: https://www.techighness.com/post/get-user-country-and-region-on-browser-with-javascript-only/
- Die gesamte Webseite auf Englisch übersetzen.
- Wenn bei der Suche nichts gefunden wird, dann wie in der App den Text "nichts gefunden" oder so einblenden.
- Kategorien (Ordner) in der Sprache des ausgewählten Landes anzeigen.
- "Check for insects"-Button entfernen und bei einer neuen Eingabe in die textarea automatisch auf Insekten prüfen.
  Siehe dazu https://www.w3schools.com/jsref/event_oninput.asp
NEXT-TODO:
- Deployment auf neuem Computer zum Laufen bringen.
- unerwünschte Zutaten rot markieren, siehe dazu https://codersblock.com/blog/highlight-text-inside-a-textarea/

FK-FIXME:
- Der Einsatz von Google-Analytics muß gemäß der Datenschutz-Grundverordnung (DSGVO) gemacht werden.

Veröffentlichung auf https://knollfrank.github.io/InsektenInLebensmitteln/
A. GitHub Action .github/workflows/buildAndDeployWebsite.yml auf github ausführen, oder
B.
   1. Downloading Open Food Facts Database:
     cd /home/frankknoll/Dokumente/Insekten/projects/Keine-Insekten-im-Essen/web/InsektenInLebensmitteln/Java/tmp
     wget --retry-connrefused --read-timeout=20 --timeout=15 --tries=0 --continue https://static.openfoodfacts.org/data/en.openfoodfacts.org.products.csv.gz
     gunzip en.openfoodfacts.org.products.csv.gz
   2. Running DataPreparation:
     cd /home/frankknoll/Dokumente/Insekten/projects/Keine-Insekten-im-Essen/web/InsektenInLebensmitteln/Java
     ./gradlew run \
       --args="-openFoodFactsDatabase /home/frankknoll/Dokumente/Insekten/projects/Keine-Insekten-im-Essen/web/InsektenInLebensmitteln/Java/tmp/en.openfoodfacts.org.products.csv \
               -webAppDataDirectory /home/frankknoll/Dokumente/Insekten/projects/Keine-Insekten-im-Essen/web/InsektenInLebensmitteln/data \
               -tmpDir /home/frankknoll/Dokumente/Insekten/projects/Keine-Insekten-im-Essen/web/InsektenInLebensmitteln/Java/tmp"
   3. Publishing Website:
     cd /home/frankknoll/Dokumente/Insekten/projects/Keine-Insekten-im-Essen/web/InsektenInLebensmitteln/config
     ./publishAll.sh /home/frankknoll/Dokumente/Insekten/projects/Keine-Insekten-im-Essen/web/InsektenInLebensmitteln/docs
   4. git push